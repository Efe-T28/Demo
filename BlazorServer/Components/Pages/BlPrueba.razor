@page "/"
@using Microsoft.JSInterop

<h3>Reportar Accidente</h3>

<div id="map" style="height: 400px; width: 100%; margin-top: 10px; border: 1px solid #ccc; position: relative;"></div>

<button class="btn btn-danger accident-button" @onclick="MarkAccident">Marcar Accidente</button>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

<script>
    var map;
    var userMarker;

    function initializeMap() {
        // Inicializar el mapa centrado en una vista global
        map = L.map('map').setView([0, 0], 2);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Permitir que el usuario agregue un marcador donde haga clic
        map.on('click', function (e) {
            var latlng = e.latlng;
            L.marker([latlng.lat, latlng.lng]).addTo(map);
        });
    }

    function markUserLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;

                // Centrar el mapa en la ubicación del usuario
                map.setView([lat, lng], 15);

                // Si ya existe un marcador, eliminarlo
                if (userMarker) {
                    map.removeLayer(userMarker);
                }

                // Colocar un marcador en la ubicación actual del usuario
                userMarker = L.marker([lat, lng]).addTo(map)
                    .bindPopup('Accidente reportado aquí.').openPopup();
            }, function () {
                alert("No se pudo obtener la ubicación.");
            });
        } else {
            alert("La geolocalización no es soportada por este navegador.");
        }
    }
</script>

<style>
    .accident-button {
        position: absolute;
        bottom: 20px;
        left: 60%;
        transform: translateX(-50%);
        z-index: 1000;
    }
</style>

@code {
    [Inject]
    private IJSRuntime JS { get; set; }

    // Inicializar el mapa al cargar el componente
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeMap");
        }
    }

    // Llamar a la función de JavaScript para marcar la ubicación del accidente
    private async Task MarkAccident()
    {
        await JS.InvokeVoidAsync("markUserLocation");
    }
}
